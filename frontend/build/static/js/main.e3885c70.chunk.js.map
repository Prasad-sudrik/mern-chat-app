{"version":3,"sources":["components/SingleChat.js","context/ChatProvider.js","components/Authentication/Login.js","components/Authentication/Signup.js","pages/Homepage.js","components/miscellaneous/ProfileModal.js","components/ChatLoading.js","components/UserAvatar/UserListItem.js","config/ChatLogics.js","components/miscellaneous/SideDrawer.js","components/UserAvatar/UserBadgeItem.js","components/miscellaneous/GroupChatModal.js","components/MyChats.js","components/miscellaneous/UpdateGroupChatModal.js","components/ScrollableChat.js","components/ChatBox.js","pages/ChatPage.js","App.js","index.js"],"names":["socket","selectedChatCompare","ChatContext","createContext","ChatState","useContext","ChatProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","selectedChat","setSelectedChat","_useState5","_useState6","chats","setChats","_useState7","_useState8","notification","setNotification","history","useHistory","useEffect","userInfo","JSON","parse","localStorage","getItem","push","_jsx","Provider","value","Login","show","setShow","email","setEmail","password","setPassword","loading","setLoading","toast","useToast","submitHandler","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","_yield$axios$post","data","wrap","_context","prev","next","title","status","duration","isClosable","position","abrupt","headers","axios","post","sent","setItem","stringify","t0","description","response","message","stop","apply","arguments","_jsxs","VStack","spacing","FormControl","id","isRequired","FormLabel","Input","placeholder","onChange","e","target","InputGroup","type","InputRightElement","width","Button","h","size","onClick","colorScheme","style","marginTop","isLoading","variant","Signup","name","setName","_useState9","_useState10","confirmpassword","setConfirmpassword","_useState11","_useState12","pic","setPic","_useState13","_useState14","handleClick","p","accept","pics","undefined","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","console","log","postDetails","files","Homepage","Container","maxW","centerContent","Box","d","justifyContent","bg","w","m","borderRadius","borderWidth","Text","fontSize","fontFamily","color","textAlign","Tabs","TabList","mb","Tab","TabPanels","TabPanel","ProfileModal","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","_Fragment","IconButton","display","base","icon","ViewIcon","Modal","isCentered","ModalOverlay","ModalContent","height","ModalHeader","ModalCloseButton","ModalBody","flexDir","alignItems","Image","boxSize","src","alt","md","ModalFooter","mr","ChatLoading","Stack","Skeleton","UserListItem","handleFunction","_hover","background","px","py","Avatar","cursor","getSender","loggedUser","users","_id","isSameSender","i","userId","length","sender","isLastMessage","messages","isSameSenderMargin","SideDrawer","search","setSearch","searchResult","setSearchResult","loadingChat","setLoadingChat","_ChatState","handleSearch","_yield$axios$get","Authorization","concat","token","get","accessChat","_ref2","_callee2","_context2","find","c","_toConsumableArray","_x","padding","Tooltip","label","hasArrow","placement","className","Menu","MenuButton","BellIcon","MenuList","pl","map","notif","MenuItem","chat","isGroupChat","chatName","as","rightIcon","ChevronDownIcon","MenuDivider","removeItem","Drawer","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","DrawerBody","pb","Spinner","ml","UserBadgeItem","CloseIcon","GroupChatModal","groupChatName","setGroupChatName","selectedUsers","setSelectedUsers","query","handleSubmit","_ref3","u","flexWrap","delUser","filter","sel","slice","userToAdd","includes","MyChats","fetchAgain","setLoggedUser","fetchChats","lg","AddIcon","overflowY","latestMessage","content","substring","UpdateGroupChatModal","setFetchAgain","fetchMessages","renameLoading","setRenameloading","handleAddUser","user1","_yield$axios$put","groupAdmin","put","chatId","handleRemove","_yield$axios$put2","_x2","handleRename","_ref4","_callee3","_yield$axios$put3","_context3","_ref5","_callee4","_context4","_x3","ScrollableChat","ScrollableFeed","mt","backgroundColor","maxWidth","marginLeft","SingleChat","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","isTyping","setIsTyping","emit","sendMessage","event","key","io","on","newMessageRecieved","ArrowBackIcon","toUpperCase","alignSelf","margin","onKeyDown","marginBottom","lastTypingTime","Date","getTime","setTimeout","ChatBox","ChatPage","App","BrowserRouter","Route","path","component","exact","document","getElementById","ReactDOM","render","ChakraProvider"],"mappings":"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","file":"static/js/main.e3885c70.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { ChatState } from \"../context/ChatProvider\";\r\nimport \"./styles.css\";\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  IconButton,\r\n  Input,\r\n  Spinner,\r\n  Text,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\r\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\r\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\r\nimport axios from \"axios\";\r\nimport ScrollableChat from \"./ScrollableChat\";\r\nimport io from \"socket.io-client\";\r\n// import Lottie from \"lottie-react\";\r\nimport animationData from \"../animations/icons8-typing.gif\";\r\n\r\nconst ENDPOINT = \"http://localhost:5000\";\r\nvar socket, selectedChatCompare;\r\n\r\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [socketConnected, setSocketConnected] = useState(false);\r\n  const [typing, setTyping] = useState(false);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const toast = useToast();\r\n\r\n  // const defaultOptions = {\r\n  //   loop: true,\r\n  //   autoplay: true,\r\n  //   animationData: animationData,\r\n  //   // rendererSettings: {\r\n  //   //   preserveAspectRatio: \"xMidYMid slice\",\r\n  //   // },\r\n  // };\r\n\r\n  const { user, selectedChat, setSelectedChat, notification, setNotification } =\r\n    ChatState();\r\n\r\n  const fetchMessages = async () => {\r\n    if (!selectedChat) return;\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      setLoading(true);\r\n\r\n      const { data } = await axios.get(\r\n        `/api/message/${selectedChat._id}`,\r\n        config\r\n      );\r\n\r\n      setMessages(data);\r\n      setLoading(false);\r\n      socket.emit(\"join chat\", selectedChat._id);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Messages\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const sendMessage = async (event) => {\r\n    if (event.key === \"Enter\" && newMessage) {\r\n      socket.emit(\"stop typing\", selectedChat._id);\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n\r\n        setNewMessage(\"\");\r\n        const { data } = await axios.post(\r\n          \"/api/message\",\r\n          { content: newMessage, chatId: selectedChat },\r\n          config\r\n        );\r\n        socket.emit(\"new message\", data);\r\n        setMessages([...messages, data]);\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error Occured!\",\r\n          description: \"Failed to send the Message\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n    socket.emit(\"setup\", user);\r\n    socket.on(\"connected\", () => setSocketConnected(true));\r\n    socket.on(\"typing\", () => setIsTyping(true));\r\n    socket.on(\"stop typing\", () => setIsTyping(false));\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n\r\n    selectedChatCompare = selectedChat;\r\n    // eslint-disable-next-line\r\n  }, [selectedChat]);\r\n\r\n  console.log(notification, \"-----------------\");\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message recieved\", (newMessageRecieved) => {\r\n      if (\r\n        !selectedChatCompare ||\r\n        selectedChatCompare._id !== newMessageRecieved.chat._id\r\n      ) {\r\n        if (!notification.includes(newMessageRecieved)) {\r\n          setNotification([newMessageRecieved, ...notification]);\r\n          setFetchAgain(!fetchAgain);\r\n        }\r\n      } else {\r\n        setMessages([...messages, newMessageRecieved]);\r\n      }\r\n    });\r\n  });\r\n\r\n  const typingHandler = (e) => {\r\n    setNewMessage(e.target.value);\r\n\r\n    if (!socketConnected) return;\r\n\r\n    if (!typing) {\r\n      setTyping(true);\r\n      socket.emit(\"typing\", selectedChat._id);\r\n    }\r\n    let lastTypingTime = new Date().getTime();\r\n    var timerLength = 1000;\r\n    setTimeout(() => {\r\n      var timeNow = new Date().getTime();\r\n      var timeDiff = timeNow - lastTypingTime;\r\n      if (timeDiff >= timerLength && typing) {\r\n        socket.emit(\"stop typing\", selectedChat._id);\r\n        setTyping(false);\r\n      }\r\n    }, timerLength);\r\n  };\r\n  return (\r\n    <>\r\n      {selectedChat ? (\r\n        <>\r\n          <Text\r\n            fontSize={{ base: \"28px\", md: \"30px\" }}\r\n            pb={3}\r\n            px={2}\r\n            w=\"100%\"\r\n            fontFamily=\"Work sans\"\r\n            display=\"flex\"\r\n            justifyContent={{ base: \"space-between\" }}\r\n            alignItems=\"center\"\r\n          >\r\n            <IconButton\r\n              display={{ base: \"flex\", md: \"none\" }}\r\n              icon={<ArrowBackIcon />}\r\n              onClick={() => setSelectedChat(\"\")}\r\n            />\r\n            {messages &&\r\n              (!selectedChat.isGroupChat ? (\r\n                <>\r\n                  {getSender(user, selectedChat.users)}\r\n                  <ProfileModal\r\n                    user={getSenderFull(user, selectedChat.users)}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {selectedChat.chatName.toUpperCase()}\r\n                  <UpdateGroupChatModal\r\n                    fetchAgain={fetchAgain}\r\n                    setFetchAgain={setFetchAgain}\r\n                    fetchMessages={fetchMessages}\r\n                  />\r\n                </>\r\n              ))}\r\n          </Text>\r\n          <Box\r\n            p={3}\r\n            display=\"flex\"\r\n            flexDir=\"column\"\r\n            justifyContent=\"flex-end\"\r\n            bg=\"#E8E8E8\"\r\n            w=\"100%\"\r\n            h=\"100%\"\r\n            borderRadius=\"lg\"\r\n            overflowY=\"hidden\"\r\n          >\r\n            {loading ? (\r\n              <Spinner\r\n                size=\"xl\"\r\n                w={20}\r\n                h={20}\r\n                alignSelf=\"center\"\r\n                margin=\"auto\"\r\n              />\r\n            ) : (\r\n              <div className=\"messages\">\r\n                <ScrollableChat messages={messages} />\r\n              </div>\r\n            )}\r\n\r\n            <FormControl\r\n              id=\"first-name\"\r\n              onKeyDown={sendMessage}\r\n              isRequired\r\n              mt={3}\r\n            >\r\n              {isTyping ? (\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      width: \"fit-content\",\r\n                      height: \"35px\",\r\n                      borderRadius: \"18px 18px\",\r\n                      marginBottom: \"15px\",\r\n                      marginLeft: \"35px\",\r\n                      backgroundColor: \"lightblue\",\r\n                      padding: \"5px\",\r\n                      display: \"flex\",\r\n                      textAlign: \"flex-start\",\r\n                      color: \"whitesmoke\",\r\n                      fontFamily: \"sans-serif\",\r\n                    }}\r\n                  >\r\n                    <i>Typing...</i>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <Input\r\n                variant=\"filled\"\r\n                bg=\"#E0E0E0\"\r\n                placeholder=\"Enter a message..\"\r\n                onChange={typingHandler}\r\n                value={newMessage}\r\n              />\r\n            </FormControl>\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        <Box\r\n          display={\"flex\"}\r\n          alignItems={\"center\"}\r\n          justifyContent={\"center\"}\r\n          h={\"100%\"}\r\n        >\r\n          <Text fontSize={\"3xl\"} pb={3} fontFamily=\"Work sans\">\r\n            Click on a user to start chatting\r\n          </Text>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleChat;\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ChatContext = createContext();\r\n\r\nconst ChatProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [selectedChat, setSelectedChat] = useState();\r\n  const [chats, setChats] = useState([]);\r\n  const [notification, setNotification] = useState([]);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    setUser(userInfo);\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <ChatContext.Provider\r\n      value={{\r\n        selectedChat,\r\n        user,\r\n        setUser,\r\n        setSelectedChat,\r\n        chats,\r\n        setChats,\r\n        notification,\r\n        setNotification,\r\n      }}\r\n    >\r\n      {children}\r\n    </ChatContext.Provider>\r\n  );\r\n};\r\n\r\nexport const ChatState = () => {\r\n  return useContext(ChatContext);\r\n};\r\n\r\nexport default ChatProvider;\r\n","import {\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  VStack,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { Button } from \"@chakra-ui/button\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport axios from \"axios\";\r\nimport { ChatState } from \"../../context/ChatProvider\";\r\n\r\nconst Login = () => {\r\n  const [show, setShow] = useState(false);\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [loading, setLoading] = useState();\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n  const { setUser } = ChatState();\r\n\r\n  const handleClick = () => setShow((prev) => !prev);\r\n  const submitHandler = async () => {\r\n    setLoading(true);\r\n    if (!email || !password) {\r\n      toast({\r\n        title: \"Please Fill all the Fields\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        \"/api/user/login\",\r\n        { email, password },\r\n        config\r\n      );\r\n      toast({\r\n        title: \"Login Successful\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setUser(data);\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setLoading(false);\r\n      history.push(\"/chats\");\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured\",\r\n        description: error.response.data.message,\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n  return (\r\n    <VStack spacing=\"5px\">\r\n      <FormControl id=\"email\" isRequired>\r\n        <FormLabel>Email</FormLabel>\r\n        <Input\r\n          value={email}\r\n          placeholder=\"Enter Your Email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Password</FormLabel>\r\n        <InputGroup>\r\n          <Input\r\n            value={password}\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Enter Your Password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      <Button\r\n        colorScheme=\"blue\"\r\n        width=\"100%\"\r\n        style={{ marginTop: 15 }}\r\n        onClick={submitHandler}\r\n        isLoading={loading}\r\n      >\r\n        Login\r\n      </Button>\r\n      <Button\r\n        colorScheme=\"red\"\r\n        variant=\"solid\"\r\n        width=\"100%\"\r\n        style={{ marginTop: 15 }}\r\n        onClick={() => {\r\n          setEmail(\"guest@example.com\");\r\n          setPassword(\"123456\");\r\n        }}\r\n      >\r\n        Get Guest User Credentials\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import {\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  VStack,\r\n} from \"@chakra-ui/react\";\r\nimport { Button } from \"@chakra-ui/button\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { ChatState } from \"../../context/ChatProvider\";\r\n\r\nconst Signup = () => {\r\n  const { setUser } = ChatState();\r\n  const [show, setShow] = useState(false);\r\n  const [name, setName] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [confirmpassword, setConfirmpassword] = useState();\r\n  const [pic, setPic] = useState();\r\n  const history = useHistory();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const toast = useToast();\r\n  const handleClick = () => setShow((prev) => !prev);\r\n\r\n  const postDetails = (pics) => {\r\n    setLoading(true);\r\n    if (pics === undefined) {\r\n      toast({\r\n        title: \"Please Select an Image!\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n      const data = new FormData();\r\n      data.append(\"file\", pics);\r\n      data.append(\"upload_preset\", \"chat-app\");\r\n      data.append(\"cloud_name\", \"de4u2lz9l\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/de4u2lz9l/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setPic(data.url.toString());\r\n          setLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      toast({\r\n        title: \"Please Select an Image!\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n      return;\r\n    }\r\n  };\r\n  const submitHandler = async () => {\r\n    setLoading(true);\r\n    if (!name || !email || !password || !confirmpassword) {\r\n      toast({\r\n        title: \"Please Fill all the Fields\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    if (password !== confirmpassword) {\r\n      toast({\r\n        title: \"Passwords Do Not Match\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        \"/api/user\",\r\n        { name, email, password, pic },\r\n        config\r\n      );\r\n      toast({\r\n        title: \"Registration Successful\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setUser(data);\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setLoading(false);\r\n      history.push(\"/chats\");\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured\",\r\n        description: error.response.data.message,\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n  return (\r\n    <VStack spacing=\"5px\">\r\n      <FormControl id=\"first-name\" isRequired>\r\n        <FormLabel>Name</FormLabel>\r\n        <Input\r\n          placeholder=\"Enter Your Name\"\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"email\" isRequired>\r\n        <FormLabel>Email</FormLabel>\r\n        <Input\r\n          placeholder=\"Enter Your Email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Password</FormLabel>\r\n        <InputGroup>\r\n          <Input\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Enter Your Password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Confirm Password</FormLabel>\r\n        <InputGroup>\r\n          <Input\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Confirm Password\"\r\n            onChange={(e) => setConfirmpassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      <FormControl id=\"pic\">\r\n        <FormLabel>Upload your Picture</FormLabel>\r\n        <Input\r\n          type=\"file\"\r\n          p={1.5}\r\n          accept=\"image/*\"\r\n          onChange={(e) => postDetails(e.target.files[0])}\r\n        />\r\n      </FormControl>\r\n      <Button\r\n        colorScheme=\"blue\"\r\n        width=\"100%\"\r\n        style={{ marginTop: 15 }}\r\n        onClick={submitHandler}\r\n        isLoading={loading}\r\n      >\r\n        Sign Up\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  Text,\r\n  Container,\r\n  Box,\r\n  Tabs,\r\n  TabList,\r\n  Tab,\r\n  TabPanels,\r\n  TabPanel,\r\n} from \"@chakra-ui/react\";\r\nimport Login from \"../components/Authentication/Login\";\r\nimport Signup from \"../components/Authentication/Signup\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nconst Homepage = () => {\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n\r\n    if (user) {\r\n      history.push(\"/chats\");\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <Container maxW=\"xl\" centerContent>\r\n      <Box\r\n        d=\"flex\"\r\n        justifyContent=\"center\"\r\n        p={3}\r\n        bg={\"white\"}\r\n        w=\"100%\"\r\n        m=\"40px 0 15px 0\"\r\n        borderRadius=\"lg\"\r\n        borderWidth=\"1px\"\r\n      >\r\n        <Text\r\n          fontSize=\"4xl\"\r\n          fontFamily=\"Work sans\"\r\n          color=\"black\"\r\n          textAlign=\"center\"\r\n        >\r\n          Talk-A-Tive\r\n        </Text>\r\n      </Box>\r\n      <Box bg=\"white\" w=\"100%\" p={4} borderRadius=\"lg\" borderWidth=\"1px\">\r\n        <Tabs variant=\"soft-rounded\">\r\n          <TabList mb=\"1em\">\r\n            <Tab width=\"50%\">Login</Tab>\r\n            <Tab width=\"50%\">Sign Up</Tab>\r\n          </TabList>\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <Login />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <Signup />\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import { ViewIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  Image,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  Text,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst ProfileModal = ({ user, children }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  return (\r\n    <>\r\n      {children ? (\r\n        <span onClick={onOpen}>{children}</span>\r\n      ) : (\r\n        <IconButton\r\n          display={{ base: \"flex\" }}\r\n          icon={<ViewIcon />}\r\n          onClick={onOpen}\r\n        />\r\n      )}\r\n      <Modal size={\"lg\"} isCentered isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent height={\"410px\"}>\r\n          <ModalHeader\r\n            fontSize={\"40px\"}\r\n            fontFamily={\"Work sans\"}\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n          >\r\n            {user.name}\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody\r\n            display={\"flex\"}\r\n            flexDir={\"column\"}\r\n            alignItems={\"center\"}\r\n            justifyContent={\"space-between\"}\r\n          >\r\n            <Image\r\n              borderRadius={\"full\"}\r\n              boxSize={\"150px\"}\r\n              src={user.pic}\r\n              alt={user.name}\r\n            />\r\n            <Text\r\n              fontSize={{ base: \"28px\", md: \"30px\" }}\r\n              fontFamily={\"Work sans\"}\r\n            >\r\n              Email: {user.email}\r\n            </Text>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default ProfileModal;\r\n","import { Skeleton, Stack } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst ChatLoading = () => {\r\n  return (\r\n    <Stack>\r\n      <Skeleton height={\"45px\"} />\r\n      <Skeleton height={\"45px\"} />\r\n      <Skeleton height={\"45px\"} />\r\n      <Skeleton height={\"45px\"} />\r\n      <Skeleton height={\"45px\"} />\r\n      <Skeleton height={\"45px\"} />\r\n      <Skeleton height={\"45px\"} />\r\n      <Skeleton height={\"45px\"} />\r\n      <Skeleton height={\"45px\"} />\r\n      <Skeleton height={\"45px\"} />\r\n      <Skeleton height={\"45px\"} />\r\n      <Skeleton height={\"45px\"} />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default ChatLoading;\r\n","import { Avatar, Box, Text, color } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst UserListItem = ({ user, handleFunction }) => {\r\n  return (\r\n    <Box\r\n      onClick={handleFunction}\r\n      bg={\"#E8E8E8\"}\r\n      _hover={{\r\n        background: \"#38B2AC\",\r\n        color: \"white\",\r\n      }}\r\n      w=\"100%\"\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      color=\"black\"\r\n      px={3}\r\n      py={2}\r\n      mb={2}\r\n      borderRadius={\"lg\"}\r\n    >\r\n      <Avatar\r\n        mr=\"2\"\r\n        size={\"sm\"}\r\n        cursor={\"pointer\"}\r\n        name={user.name}\r\n        src={user.pic}\r\n      />\r\n      <Box>\r\n        <Text>{user.name}</Text>\r\n        <Text fontSize={\"xs\"}>\r\n          <b>Email :</b>\r\n          {user.email}\r\n        </Text>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserListItem;\r\n","export const getSender = (loggedUser, users) => {\r\n  return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\r\n};\r\nexport const getSenderFull = (loggedUser, users) => {\r\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\r\n};\r\n\r\nexport const isSameSender = (message, m, i, userId) => {\r\n  return (\r\n    i < message.length - 1 &&\r\n    (message[i + 1].sender._id !== m.sender._id ||\r\n      message[i + 1].sender._id === undefined) &&\r\n    message[i].sender._id !== userId\r\n  );\r\n};\r\n\r\nexport const isLastMessage = (messages, i, userId) => {\r\n  return (\r\n    i === messages.length - 1 &&\r\n    messages[messages.length - 1].sender._id !== userId &&\r\n    messages[messages.length - 1].sender._id\r\n  );\r\n};\r\n\r\nexport const isSameSenderMargin = (messages, m, i, userId) => {\r\n  // console.log(i === messages.length - 1);\r\n\r\n  if (\r\n    i < messages.length - 1 &&\r\n    messages[i + 1].sender._id === m.sender._id &&\r\n    messages[i].sender._id !== userId\r\n  )\r\n    return 33;\r\n  else if (\r\n    (i < messages.length - 1 &&\r\n      messages[i + 1].sender._id !== m.sender._id &&\r\n      messages[i].sender._id !== userId) ||\r\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\r\n  )\r\n    return 0;\r\n  else return \"auto\";\r\n};\r\n\r\nexport const isSameUser = (messages, m, i) => {\r\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\r\n};\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  Input,\r\n  Menu,\r\n  MenuButton,\r\n  MenuDivider,\r\n  MenuItem,\r\n  MenuList,\r\n  Text,\r\n  Tooltip,\r\n  useToast,\r\n  useDisclosure,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\r\nimport React, { useState } from \"react\";\r\nimport { ChatState } from \"../../context/ChatProvider\";\r\nimport ProfileModal from \"./ProfileModal\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ChatLoading from \"../ChatLoading\";\r\nimport UserListItem from \"../UserAvatar/UserListItem\";\r\nimport { getSender } from \"../../config/ChatLogics\";\r\nconst SideDrawer = () => {\r\n  const toast = useToast();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingChat, setLoadingChat] = useState();\r\n  const {\r\n    user,\r\n    setSelectedChat,\r\n    chats,\r\n    setChats,\r\n    setUser,\r\n    notification,\r\n    setNotification,\r\n  } = ChatState();\r\n  const history = useHistory();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const handleSearch = async () => {\r\n    if (!search) {\r\n      toast({\r\n        title: \"Please Enter something in search\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top-left\",\r\n      });\r\n      return;\r\n    }\r\n    try {\r\n      setLoading(true);\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const accessChat = async (userId) => {\r\n    try {\r\n      setLoadingChat(true);\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/chat\", { userId }, config);\r\n\r\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\r\n      setSelectedChat(data);\r\n      setLoadingChat(false);\r\n      onClose();\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error fetching the chat\",\r\n        description: error.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    console.log(\"logout\");\r\n    localStorage.removeItem(\"userInfo\");\r\n    setChats([]);\r\n    setUser(null);\r\n    setSelectedChat(\"\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        display={\"flex\"}\r\n        justifyContent={\"space-between\"}\r\n        alignItems={\"center\"}\r\n        bg={\"white\"}\r\n        w={\"100%\"}\r\n        padding={\"5px 10px 5px 10px\"}\r\n        borderWidth={\"5px\"}\r\n      >\r\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\r\n          <Button variant=\"ghost\" onClick={onOpen}>\r\n            <i className=\"fas fa-search\"></i>\r\n            <Text display={{ base: \"none\", md: \"flex\" }} px=\"4\">\r\n              Search User\r\n            </Text>\r\n          </Button>\r\n        </Tooltip>\r\n\r\n        <Text fontSize={\"2xl\"} fontFamily={\"Work sans\"}>\r\n          Tak-A-Tive\r\n        </Text>\r\n        <div>\r\n          <Menu>\r\n            <MenuButton p={1}>\r\n              <BellIcon fontSize={\"2xl\"} m={1} />\r\n            </MenuButton>\r\n            <MenuList pl={2}>\r\n              {!notification.length && \"No New Messages\"}\r\n              {notification.map((notif) => (\r\n                <MenuItem key={notif._id}>\r\n                  {notif.chat.isGroupChat\r\n                    ? `New Message in ${notif.chat.chatName}`\r\n                    : `New Message from ${getSender(user, notif.chat.users)}`}\r\n                </MenuItem>\r\n              ))}\r\n            </MenuList>\r\n          </Menu>\r\n          <Menu>\r\n            <MenuButton as={Button} rightIcon={<ChevronDownIcon />}>\r\n              <Avatar\r\n                size={\"sm\"}\r\n                cursor={\"pointer\"}\r\n                name={user.name}\r\n                src={user.pic}\r\n              />\r\n            </MenuButton>\r\n            <MenuList>\r\n              <ProfileModal user={user}>\r\n                <MenuItem>My Profile</MenuItem>\r\n              </ProfileModal>\r\n              <MenuDivider />\r\n              <MenuItem onClick={logoutHandler}>Logout</MenuItem>\r\n            </MenuList>\r\n          </Menu>\r\n        </div>\r\n      </Box>\r\n\r\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerHeader borderBottomWidth={\"1px\"}>Search Users</DrawerHeader>\r\n          <DrawerBody>\r\n            <Box display={\"flex\"} pb={2}>\r\n              <Input\r\n                placeholder=\"Search by name or email\"\r\n                mr={2}\r\n                value={search}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n              />\r\n              <Button onClick={handleSearch}>Go</Button>\r\n            </Box>\r\n            {loading ? (\r\n              <ChatLoading />\r\n            ) : (\r\n              searchResult?.map((user) => (\r\n                <UserListItem\r\n                  key={user._id}\r\n                  user={user}\r\n                  handleFunction={() => accessChat(user._id)}\r\n                />\r\n              ))\r\n            )}\r\n            {loadingChat && <Spinner ml={\"auto\"} display={\"flex\"} />}\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SideDrawer;\r\n","import { Box } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { CloseIcon } from \"@chakra-ui/icons\";\r\n\r\nconst UserBadgeItem = ({ user, handleFunction }) => {\r\n  return (\r\n    <Box\r\n      px={2}\r\n      py={1}\r\n      borderRadius={\"lg\"}\r\n      m={1}\r\n      mb={2}\r\n      variant={\"solid\"}\r\n      fontSize={12}\r\n      bg={\"purple\"}\r\n      color={\"white\"}\r\n      cursor={\"pointer\"}\r\n      onClick={handleFunction}\r\n    >\r\n      {user.name}\r\n      <CloseIcon pl={1} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserBadgeItem;\r\n","import {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  Input,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  useDisclosure,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { ChatState } from \"../../context/ChatProvider\";\r\nimport axios from \"axios\";\r\nimport UserListItem from \"../UserAvatar/UserListItem\";\r\nimport UserBadgeItem from \"../UserAvatar/UserBadgeItem\";\r\n\r\nconst GroupChatModal = ({ children }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [groupChatName, setGroupChatName] = useState();\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n  const [search, setSearch] = useState();\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const toast = useToast();\r\n\r\n  const { user, chats, setChats } = ChatState();\r\n  const handleSearch = async (query) => {\r\n    setSearch(query);\r\n    if (!query) {\r\n      return;\r\n    }\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(`/api/user?search=${query}`, config);\r\n      console.log(data);\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const handleSubmit = async () => {\r\n    if (!groupChatName || !selectedUsers) {\r\n      toast({\r\n        title: \"Please fill all the fields\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n      return;\r\n    }\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"api/chat/group\",\r\n        {\r\n          name: groupChatName,\r\n          users: JSON.stringify(selectedUsers.map((u) => u._id)),\r\n        },\r\n        config\r\n      );\r\n\r\n      setChats([data, ...chats]);\r\n      onClose();\r\n      toast({\r\n        title: \"New Group Chat Created!\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Failed to Create the Chat!\",\r\n        description: error.response.data,\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n  const handleDelete = (delUser) => {\r\n    setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\r\n  };\r\n  const handleGroup = (userToAdd) => {\r\n    if (selectedUsers.includes(userToAdd)) {\r\n      toast({\r\n        title: \"User already added\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    setSelectedUsers([...selectedUsers, userToAdd]);\r\n  };\r\n  return (\r\n    <>\r\n      <span onClick={onOpen}>{children}</span>\r\n\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader\r\n            fontSize={\"35px\"}\r\n            fontFamily={\"Work sans\"}\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n          >\r\n            Create Group Chat\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody display={\"flex\"} flexDir={\"column\"} alignItems={\"center\"}>\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Chat Name\"\r\n                mb={3}\r\n                onChange={(e) => setGroupChatName(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Add Users eg: John, Prasad, Jane\"\r\n                mb={1}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <Box w={\"100%\"} display={\"flex\"} flexWrap={\"wrap\"}>\r\n              {selectedUsers.map((user) => (\r\n                <UserBadgeItem\r\n                  key={user._id}\r\n                  user={user}\r\n                  handleFunction={() => handleDelete(user)}\r\n                />\r\n              ))}\r\n            </Box>\r\n            {/* render searched users */}\r\n            {loading ? (\r\n              <div>loading</div>\r\n            ) : (\r\n              searchResult\r\n                ?.slice(0, 4)\r\n                .map((user) => (\r\n                  <UserListItem\r\n                    key={user._id}\r\n                    user={user}\r\n                    handleFunction={() => handleGroup(user)}\r\n                  />\r\n                ))\r\n            )}\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" onClick={handleSubmit}>\r\n              Create Chat\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GroupChatModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { ChatState } from \"../context/ChatProvider\";\r\nimport { Box, Button, Stack, Text, useToast } from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { AddIcon } from \"@chakra-ui/icons\";\r\nimport ChatLoading from \"./ChatLoading\";\r\nimport { getSender } from \"../config/ChatLogics\";\r\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\r\n\r\nconst MyChats = ({ fetchAgain }) => {\r\n  const [loggedUser, setLoggedUser] = useState();\r\n  const { selectedChat, user, setSelectedChat, chats, setChats } = ChatState();\r\n  const toast = useToast();\r\n  const fetchChats = async () => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(\"/api/chat\", config);\r\n      console.log(data);\r\n      setChats(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the chats\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n    fetchChats();\r\n  }, [fetchAgain]);\r\n\r\n  return (\r\n    <Box\r\n      display={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\r\n      flexDir=\"column\"\r\n      alignItems=\"center\"\r\n      p={3}\r\n      bg={\"white\"}\r\n      w={{ base: \"100%\", md: \"31%\" }}\r\n      borderRadius={\"lg\"}\r\n      borderWidth={\"1px\"}\r\n    >\r\n      <Box\r\n        pb={3}\r\n        px={3}\r\n        fontSize={{ base: \"28px\", md: \"30px\" }}\r\n        fontFamily=\"Work sans\"\r\n        display=\"flex\"\r\n        w=\"100%\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"centre\"\r\n      >\r\n        My Chats\r\n        <GroupChatModal>\r\n          <Button\r\n            display={\"flex\"}\r\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\r\n            rightIcon={<AddIcon />}\r\n          >\r\n            New Group Chat\r\n          </Button>\r\n        </GroupChatModal>\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        flexDir=\"column\"\r\n        p={3}\r\n        bg=\"#F8F8F8\"\r\n        w=\"100%\"\r\n        h=\"100%\"\r\n        borderRadius=\"lg\"\r\n        overflowY=\"hidden\"\r\n      >\r\n        {chats ? (\r\n          <Stack overflowY={\"scroll\"}>\r\n            {chats.map((chat) => (\r\n              <Box\r\n                onClick={() => setSelectedChat(chat)}\r\n                cursor={\"pointer\"}\r\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\r\n                color={selectedChat === chat ? \"white\" : \"black\"}\r\n                px={3}\r\n                py={2}\r\n                borderRadius={\"lg\"}\r\n                key={chat._id}\r\n              >\r\n                <Text>\r\n                  {!chat.isGroupChat\r\n                    ? getSender(loggedUser, chat.users)\r\n                    : chat.chatName}\r\n                </Text>\r\n                {chat.latestMessage && (\r\n                  <Text fontSize=\"xs\">\r\n                    <b>{chat.latestMessage.sender.name} : </b>\r\n                    {chat.latestMessage.content.length > 50\r\n                      ? chat.latestMessage.content.substring(0, 51) + \"...\"\r\n                      : chat.latestMessage.content}\r\n                  </Text>\r\n                )}\r\n              </Box>\r\n            ))}\r\n          </Stack>\r\n        ) : (\r\n          <ChatLoading />\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyChats;\r\n","import { ViewIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  useDisclosure,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  Button,\r\n  IconButton,\r\n  useToast,\r\n  Box,\r\n  FormControl,\r\n  Input,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { ChatState } from \"../../context/ChatProvider\";\r\nimport UserBadgeItem from \"../UserAvatar/UserBadgeItem\";\r\nimport axios from \"axios\";\r\nimport UserListItem from \"../UserAvatar/UserListItem\";\r\n\r\nconst UpdateGroupChatModal = ({ fetchAgain, setFetchAgain, fetchMessages }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [groupChatName, setGroupChatName] = useState();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [renameLoading, setRenameloading] = useState(false);\r\n\r\n  const toast = useToast();\r\n\r\n  const { selectedChat, setSelectedChat, user } = ChatState();\r\n\r\n  const handleAddUser = async (user1) => {\r\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\r\n      toast({\r\n        title: \"User Already in group!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (selectedChat.groupAdmin._id !== user._id) {\r\n      toast({\r\n        title: \"Only admins can add someone!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        \"/api/chat/groupadd\",\r\n        {\r\n          chatId: selectedChat._id,\r\n          userId: user1._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRemove = async (user1) => {\r\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\r\n      toast({\r\n        title: \"Only admins can remove someone!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        \"/api/chat/groupremove\",\r\n        {\r\n          chatId: selectedChat._id,\r\n          userId: user1._id,\r\n        },\r\n        config\r\n      );\r\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      fetchMessages();\r\n      setLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRename = async () => {\r\n    if (!groupChatName) return;\r\n    try {\r\n      setRenameloading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        \"/api/chat/rename\",\r\n        {\r\n          chatId: selectedChat._id,\r\n          chatName: groupChatName,\r\n        },\r\n        config\r\n      );\r\n      setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      setRenameloading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setRenameloading(false);\r\n    }\r\n\r\n    setGroupChatName(\"\");\r\n  };\r\n\r\n  const handleSearch = async (query) => {\r\n    setSearch(query);\r\n    if (!query) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(`/api/user?search=${query}`, config);\r\n      console.log(data);\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        display={{ base: \"flex\" }}\r\n        icon={<ViewIcon />}\r\n        onClick={onOpen}\r\n      />\r\n\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader\r\n            fontSize=\"35px\"\r\n            fontFamily=\"Work sans\"\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            {selectedChat.chatName}\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <Box w=\"100%\" display=\"flex\" flexWrap=\"wrap\" pb={3}>\r\n              {selectedChat.users.map((u) => (\r\n                <UserBadgeItem\r\n                  key={user._id}\r\n                  user={u}\r\n                  handleFunction={() => handleRemove(u)}\r\n                />\r\n              ))}\r\n            </Box>\r\n            <FormControl display={\"flex\"}>\r\n              <Input\r\n                placeholder=\"Chat Name\"\r\n                mb={3}\r\n                value={groupChatName}\r\n                onChange={(e) => setGroupChatName(e.target.value)}\r\n              />\r\n              <Button\r\n                variant=\"solid\"\r\n                colorScheme=\"teal\"\r\n                ml={1}\r\n                isLoading={renameLoading}\r\n                onClick={handleRename}\r\n              >\r\n                Update\r\n              </Button>\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Add User to group\"\r\n                mb={1}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            {loading ? (\r\n              <Spinner size={\"lg\"} />\r\n            ) : (\r\n              searchResult?.map((user) => (\r\n                <UserListItem\r\n                  key={user._id}\r\n                  user={user}\r\n                  handleFunction={() => handleAddUser(user)}\r\n                />\r\n              ))\r\n            )}\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\r\n              Leave Group\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateGroupChatModal;\r\n","import React from \"react\";\r\nimport ScrollableFeed from \"react-scrollable-feed\";\r\nimport {\r\n  isLastMessage,\r\n  isSameSender,\r\n  isSameSenderMargin,\r\n} from \"../config/ChatLogics\";\r\nimport { ChatState } from \"../context/ChatProvider\";\r\nimport { Avatar, Tooltip } from \"@chakra-ui/react\";\r\n\r\nconst ScrollableChat = ({ messages }) => {\r\n  const { user } = ChatState();\r\n  return (\r\n    <ScrollableFeed>\r\n      {messages &&\r\n        messages.map((m, i) => (\r\n          <div style={{ display: \"flex\" }} key={m._id}>\r\n            {(isSameSender(messages, m, i, user._id) ||\r\n              isLastMessage(messages, i, user._id)) && (\r\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\r\n                <Avatar\r\n                  mt={\"7px\"}\r\n                  mr={1}\r\n                  size={\"sm\"}\r\n                  cursor={\"pointer\"}\r\n                  name={m.sender.name}\r\n                  src={m.sender.pic}\r\n                />\r\n              </Tooltip>\r\n            )}\r\n            <span\r\n              style={{\r\n                backgroundColor: `${\r\n                  m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\r\n                }`,\r\n                borderRadius: \"20px\",\r\n                padding: \"5px 15px\",\r\n                maxWidth: \"75%\",\r\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\r\n                marginTop: isSameSender(messages, m, i, user._id) ? 3 : 10,\r\n              }}\r\n            >\r\n              {m.content}\r\n            </span>\r\n          </div>\r\n        ))}\r\n    </ScrollableFeed>\r\n  );\r\n};\r\n\r\nexport default ScrollableChat;\r\n","import React from \"react\";\r\nimport { ChatState } from \"../context/ChatProvider\";\r\nimport { Box } from \"@chakra-ui/react\";\r\nimport SingleChat from \"./SingleChat\";\r\n\r\nconst ChatBox = ({ fetchAgain, setFetchAgain }) => {\r\n  const { selectedChat } = ChatState();\r\n  return (\r\n    <Box\r\n      display={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\r\n      alignItems=\"center\"\r\n      flexDir=\"column\"\r\n      p={3}\r\n      bg=\"white\"\r\n      w={{ base: \"100%\", md: \"68%\" }}\r\n      borderRadius=\"lg\"\r\n      borderWidth=\"1px\"\r\n    >\r\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { ChatState } from \"../context/ChatProvider\";\r\nimport { Box } from \"@chakra-ui/react\";\r\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\r\nimport MyChats from \"../components/MyChats\";\r\nimport ChatBox from \"../components/ChatBox\";\r\n\r\nconst ChatPage = () => {\r\n  const { user } = ChatState();\r\n  if (!user) console.log(\"No user in ChatPage\");\r\n  const [fetchAgain, setFetchAgain] = useState(false);\r\n\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      {user && <SideDrawer />}\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        width=\"100%\"\r\n        height=\"91.5vh\"\r\n        padding=\"10px\"\r\n      >\r\n        {user && <MyChats fetchAgain={fetchAgain} />}\r\n        {user && (\r\n          <ChatBox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\r\n        )}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatPage;\r\n","import { BrowserRouter, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Homepage from \"./pages/Homepage\";\nimport ChatPage from \"./pages/ChatPage\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Route path=\"/\" component={Homepage} exact />\n        <Route path=\"/chats\" component={ChatPage} />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport ChatProvider from \"./context/ChatProvider\";\n\nconst container = document.getElementById(\"root\");\n\nReactDOM.render(\n  <ChakraProvider>\n    <BrowserRouter>\n      <ChatProvider>\n        <App />\n      </ChatProvider>\n    </BrowserRouter>\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}